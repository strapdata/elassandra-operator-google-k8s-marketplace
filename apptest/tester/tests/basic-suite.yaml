actions:
- name: Operator deployed successfully
  bashTest:
    script: |-
      set -xe

      wait_for_operator_creation
      OPERATOR_NAME=$(get_operator_name)
      wait_for_healthy_operator
      kubectl get deployments "${OPERATOR_NAME}" \
        --namespace "${NAMESPACE}" \
        --output jsonpath='{.status.readyReplicas}'

    expect:
      exitCode:
        equals: 0

- name: StatefulSet deployed successfully
  bashTest:
    script: |-
      set -xe

      # wait until STS is created
      wait_sts_creation
      # once created, wait until number of replicas are ok
      STS_NAME=$(get_sts_name)
      wait_for_healthy_sts
      kubectl get sts "${STS_NAME}" \
        --namespace "${NAMESPACE}" \
        --output jsonpath='{.status.readyReplicas}'

    expect:
      exitCode:
        equals: 0

- name: Wait for pods to be ready and test
  bashTest:
    script: |-
      set -ex
      info "Wait for Operator"
      wait_for_operator_creation
      OPERATOR_NAME=$(get_operator_name)
      wait_for_healthy_operator
      kubectl get deployments "${OPERATOR_NAME}" \
      --namespace "${NAMESPACE}" \
      --output jsonpath='{.status.readyReplicas}'

      info "Wait for StatefulSets"
      wait_sts_creation
      STS_NAME=$(get_sts_name)
      wait_for_healthy_sts
      kubectl get sts "${STS_NAME}" \
      --namespace "${NAMESPACE}" \
      --output jsonpath='{.status.readyReplicas}'

      wait_pod_ready "${STS_NAME}-0"
      wait_pod_ready "${STS_NAME}-1"

      wait_numberOf_pod_in_NORMAL_state 2

      CLUSTER_NAME=$(get_cluster_name)
      DATACENTER_NAME=$(get_datacenter_name)

      info "Check ES connection"
      curl -u "cassandra:${CASSANDRA_PASSWORD}" --insecure "https://${ELASSANDRA_HOST}:9200/" 2>&1


    expect:
      exitCode:
        equals: 0
